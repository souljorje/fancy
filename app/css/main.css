@import 'fonts.css';
article,
details,
section,
summary,
aside,
main,
menu,
nav,
figcaption,
figure,
footer,
header,
hgroup {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  outline: none;
}
*::after,
*::before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Solomon Sans Normal';
}
.container {
  width: 1170px;
  padding: 0 15px;
  margin: 0 auto;
  zoom: 1;
}
.container:before,
.container:after {
  content: "";
  display: table;
}
.container:after {
  clear: both;
}
h1 {
  font-size: 2.625em;
}
h2 {
  font-size: 2em;
}
h3 {
  font-size: 1.625em;
}
h4 {
  font-size: 1.5em;
}
button {
  background-color: #ea8400;
  font-family: 'Solomon Sans Black';
  color: #fff;
  padding: 10px 35px;
  border: 0;
  border-radius: 3px;
  font-size: 1.375em;
  cursor: pointer;
  -webkit-transition: ease 0.2s all;
  transition: ease 0.2s all;
}
button:hover {
  background-color: #faa435;
}
button:active {
  -webkit-transform: scale(0.95);
  transform: scale(0.95);
}
header {
  min-height: 70px;
  background-color: #646d7a;
  text-align: center;
  position: fixed;
  top: 0;
  color: #fff;
  width: 100%;
  z-index: 2;
  position: relative;
  overflow: hidden;
}
header p {
  margin-top: 5px;
  margin-bottom: 5px;
}
header * {
  display: inline-block;
}
header .contacts {
  position: absolute;
  padding-top: 20px;
  right: 45%;
  top: 0;
}
header .contacts p {
  margin-left: 15px;
  margin-right: 15px;
}
header .contacts a {
  color: #fff;
  text-decoration: none;
}
header .contacts a:hover {
  color: #ea8400;
}
header .social {
  font-weight: bold;
  margin-left: 40px;
  padding-top: 20px;
  background-color: #ea8400;
  position: absolute;
  height: 100%;
  width: 100%;
  text-align: left;
  right: 0;
  width: 45%;
  top: 0;
  padding-left: 15px;
}
header .social a {
  margin-left: 15px;
}
header .social a img {
  vertical-align: middle;
  width: 50%;
}
main {
  background-image: url("../img/bg.png");
  min-height: 716px;
  background-size: cover;
  background-position: center;
  padding-top: 140px;
  padding-bottom: 60px;
  text-align: center;
}
main h1 {
  font-family: 'Solomon Sans Light';
  color: #fff;
}
main .offer {
  margin-top: 70px;
  background-color: #fff;
  border-radius: 50px 0 50px 0;
  max-width: 700px;
  display: inline-block;
  padding: 20px 100px;
}
main .offer h3 {
  font-family: 'Solomon Sans Black';
  margin: 0;
}
main .offer p {
  font-family: 'Solomon Sans Normal';
}
.work {
  padding: 30px 0;
  text-align: center;
}
.work h2 {
  margin-top: 0;
  font-family: 'Solomon Sans Black';
  text-align: center;
}
.work-item {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.work-item-images {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 41.25%;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
}
.work-item-images a img {
  width: 140px;
  margin-bottom: 10px;
}
.work-item-images a:first-child img {
  width: 100%;
}
.work-item-content {
  text-align: left;
  width: 50%;
}
.work-item-content p {
  font-size: 1.275em;
  margin-top: 0;
}
.work-item-content > p b {
  font-family: 'Solomon Sans Black';
}
.work-item-cost {
  border: 2px solid #e3e5e6;
  color: #ea8400;
  padding: 15px;
}
.work-item-cost p:after {
  content: '';
  width: 100%;
  height: 1px;
  background-color: #000;
  display: block;
}
.work-item-cost b {
  float: right;
  font-family: 'Solomon Sans Black';
}
.works {
  margin-top: 20px;
}
.works p {
  display: inline-block;
  vertical-align: top;
  font-family: 'Solomon Sans Black';
}
.works ul {
  display: inline-block;
  list-style-type: none;
  margin-top: 5px;
}
.works ul li:before {
  content: '';
  width: 5px;
  height: 5px;
  border-radius: 5px;
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 2px;
  margin-right: 5px;
  background-color: #ea8400;
}
.cost {
  text-align: center;
  padding: 30px 0;
}
.cost h2 {
  font-family: 'Solomon Sans Black';
}
.cost p {
  font-size: 1.275em;
}
.cost-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.cost-item-wrap {
  max-width: 320px;
  display: inline-block;
  margin-bottom: 30px;
  padding: 0 5px;
  padding-top: 5px;
}
.cost-item-wrap button {
  width: 100%;
  height: 97px;
  padding-bottom: 50px;
  border-radius: 0;
  background-color: transparent;
  background-image: url("../img/icons/button.png");
  background-position: center;
}
.cost-item-wrap button:hover {
  background-image: url("../img/icons/button-hov.png");
}
.cost-item-wrap:nth-child(2) .cost-item span {
  background-position: -53px 12px;
}
.cost-item-wrap:nth-child(3) .cost-item span {
  background-position: -107px 12px;
}
.cost-item {
  min-height: 590px;
  padding: 20px;
  padding-bottom: 40px;
  -webkit-box-shadow: 0 0 11px rgba(0,0,0,0.16);
  box-shadow: 0 0 11px rgba(0,0,0,0.16);
  position: relative;
  overflow: hidden;
}
.cost-item span {
  width: 70px;
  height: 70px;
  background-image: url("../img/icons/iconset.png");
  background-color: #fff;
  background-repeat: no-repeat;
  background-position: 4px 12px;
  display: inline-block;
  border: 2px solid #95989a;
  border-radius: 50px;
  position: relative;
}
.cost-item span:after {
  content: '';
  height: 59px;
  width: 320px;
  left: -127px;
  z-index: -1;
  bottom: -24px;
  position: absolute;
  display: inline-block;
  background-color: #f3f3f3;
}
.cost-item ol {
  text-align: left;
  padding-left: 18px;
}
.cost-item p {
  position: absolute;
  bottom: 0;
  font-size: 1em;
  font-weight: bold;
  color: #ea8400;
  padding-right: 15px;
}
.form-popup {
  position: relative;
  background: #fff;
  padding: 20px;
  max-width: 400px;
  margin: 20px auto;
  border-radius: 5px;
}
.form-popup .form {
  margin-top: 20px;
  max-width: 400px;
  text-align: center;
  font-size: 1.5em;
}
.form-popup .form-group {
  margin-bottom: 20px;
  text-align: left;
}
.form-popup .form-group input {
  display: block;
  margin: auto;
  margin-top: 5px;
  width: 100%;
  font-size: 0.9em;
  font-family: 'Solomon Sans Light';
  font-style: italic;
  padding: 5px;
  border-radius: 3px;
  border: 1px solid #808080;
}
.form-popup .form-group input:focus {
  -webkit-box-shadow: 0 0 5px #ea8400;
  box-shadow: 0 0 5px #ea8400;
}
.form-popup .form button {
  display: inline-block;
}
#thx {
  position: relative;
  background: #fff;
  padding: 20px;
  max-width: 400px;
  margin: 20px auto;
  border-radius: 5px;
  text-align: center;
  font-size: 1.25em;
}
#thx .mfp-close {
  display: none;
}
.mfp-close {
  cursor: pointer !important;
  margin-right: 0;
  -webkit-transform: none !important;
  transform: none !important;
  font-size: 40px;
}
.mfp-close:hover {
  background-color: transparent;
}
.mfp-with-zoom .mfp-container,
.mfp-with-zoom.mfp-bg {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-backface-visibility: hidden;
/* ideally, transition speed should match zoom duration */
  -webkit-transition: all 0.3s ease-out;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
}
.mfp-with-zoom.mfp-ready .mfp-container {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
}
.mfp-with-zoom.mfp-ready.mfp-bg {
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}
.mfp-with-zoom.mfp-removing .mfp-container,
.mfp-with-zoom.mfp-removing.mfp-bg {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}
.slick-prev:before,
.slick-next:before {
  color: #ea8400;
  font-size: 32px;
}
.slick-prev,
.slick-next {
  -webkit-transform: none;
  transform: none;
}
@media only screen and (max-width: 1200px) {
  .container {
    width: 970px;
  }
}
@media only screen and (max-width: 992px) {
  .container {
    width: 750px;
  }
  .work p {
    font-size: 1.0625em;
  }
  .work .container {
    padding: 0 40px;
  }
  .works p {
    margin-bottom: 5px;
  }
  .works ul {
    padding: 0;
    margin-top: 0;
  }
}
@media only screen and (max-width: 767px) {
  .container {
    width: 100%;
  }
  h1 {
    font-size: 2.1em;
  }
  header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  header .contacts,
  header .social {
    position: inherit;
    padding-top: 0;
  }
  header .social {
    margin-left: -15px;
    text-align: center;
    width: 120%;
  }
  .work-item-images a img {
    width: 140px;
    height: 125px;
  }
  .work-item-images a:first-child img {
    width: 140px;
    height: 125px;
  }
  .work-item-cost b {
    float: none;
    display: inline-block;
  }
}
@media only screen and (max-width: 480px) {
  main .offer {
    padding: 20px;
  }
  .work-item-images {
    -ms-flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -ms-flex-pack: start;
    -webkit-box-pack: start;
            justify-content: start;
  }
}
@media only screen and (max-width: 447px) {
  header {
    padding-top: 5px;
  }
  .work .container {
    padding: 0 15px;
  }
  .work-item-images {
    width: auto;
    -ms-flex-direction: row;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    -ms-flex-pack: distribute;
    justify-content: space-around;
    margin-bottom: 10px;
  }
  .work-item-content {
    width: auto;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  .work-item-cost {
    -ms-flex-order: 2;
    -webkit-box-ordinal-group: 3;
            order: 2;
  }
  .works {
    margin-top: 0;
  }
}
@media only screen and (max-width: 380px) {
  h1 {
    font-size: 1.65375em;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
